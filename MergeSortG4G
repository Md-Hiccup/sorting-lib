	MERGE SORT

arr[] = {91,38,27,43,3,9,82,72}
mergeSort(arr, 0, 7)

1st Half

1st Execute
l = 0, r = 7, m = 3
mergeSort(arr, 0, 3)
	
	2nd Execute
	l = 0, r = 3, m = 1
	mergeSort(arr, 0, 1)
		
		3rd Execute
		l = 0, r = 1, m = 0
		mergeSort(arr, 0, 0)	// false
		mergeSort2(arr, 1, 1)	// false
		merge(arr, 0, 0, 1) = {
			n1 = 0 - 0 + 1	=> n1 = 1
			n2 = 1 - 0    	=> n2 = 1
			L[0] = 91
			R[0] = 38
			arr[0] = 38
			arr[1] = 91
			arr = {38,91,27,43,3,9,82,72}
		}
	
	mergeSort2(arr, 2, 3)
	
		4th Execute
		l = 2, r = 3, m = 2
		mergeSort(arr, 2, 2)	// false
		mergeSort2(arr, 3, 3)	// false
		merge(arr, 2, 2, 3) = {
			n1 = 2-2+1	=> n1 = 1
			n2 = 3-2	=> n2 = 1 	
			L[0] = 27
			R[0] = 43
			arr[2] = 27
			arr[3] = 43
			arr = {38,91,27,43,3,9,82,72}
		}

	merge(arr, 0, 1, 3) = {
		n1 = 1-0+1 	=> n1 = 2
		n2 = 3-1	=> n2 = 2
		L[0] = 38, L[1] = 91
		R[0] = 27, R[1] = 43
		arr[0,1,2,3] = {27, 38, 43, 91}
		arr = {27, 38, 43,91, 3, 9, 82, 72}
	}


2nd Half

mergeSort2(arr, 4, 7)
	
	5th Execute
	l = 4, r = 7, m = 5
	mergeSort(arr, 4, 5)
	
		6th Execute
		l = 4, r = 5 , m = 4
		mergeSort(arr, 4, 4)	// false
		mergeSort2(arr, 5, 5)	// false
		merge(arr, 4, 4, 5) = {
		n1 = 4-4+1	=> n1 = 1
		n2 = 5-4	=> n2 = 1
		L[0] = 3
		R[0] = 9
		arr[4] = 3
		arr[5] = 9
		arr = {27, 38, 43,91, 3, 9, 82, 72}
		}
	
	mergeSort2(arr, 6, 7)
	
		7th Execute
		l = 6, r = 7, m = 6
		mergeSort(arr, 6, 6)	// false
		mergeSort(arr, 7, 7)	// false
		merge(arr, 6, 6, 7) = {
			n1 = 6-6+1	=> n1 = 1
			n2 = 7-6	=> n2 = 1
			L[0] = 82
			R[0] = 72
			arr[6] = 72
			arr[7] = 82
			arr = {27, 38, 43,91, 3, 9, 72, 82}
		}
	
	merge(arr, 4, 5, 7) = {
		n1 = 5-4+1	=> n1 = 2
		n2 = 7-5	=> n2 = 2
		L[0] = 3, L[1] = 9
		R[0] = 72, R[1] = 82
		arr[4,5,6,7] = {3, 9, 72, 82}
		arr = {27, 38, 43,91, 3, 9, 72, 82}
	}

merge(arr, 0, 3, 7) = {
	n1 = 3-0+1	=> n1 = 4
	n2 = 7-3	=> n2 = 4
	L[0,1,2,3] = {27, 38, 43, 91}
	R[0,1,2,3] = {3, 9, 72, 82}
	arr[0,1,2,3,4,5,6,7] = {3, 9, 27, 38, 43, 72, 82, 91}
	arr = {3, 9, 27, 38, 43, 72, 82, 91}
}
























